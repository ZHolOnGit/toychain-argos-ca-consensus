#!/bin/bash
# Start an experiment
# Options:
# --reset    or -r  : will reset everything blockchain related
# --start    or -s  : will start the experiment
# --startz   or -sz : will start with no visualization
# --logs     or -l  : will display monitor.log for all robots
# --python   or -p  : will display python console for all robots

source experimentconfig.sh

echo "+-----------------------------------------------------------+"
echo "MAINFOLDER IS $MAINFOLDER"

echo "+-----------------------------------------------------------+"
echo "Updating the ARGoS XML file"

sed -e "s|NUM1|$NUM1|g"\
    -e "s|CON1|$CON1|g"\
    -e "s|STARTDIM|$STARTDIM|g"\
    -e "s|TPS|$TPS|g"\
    -e "s|SEED|$SEED|g"\
    -e "s|RABRANGE|$RABRANGE|g"\
    -e "s|EXPERIMENTFOLDER|$EXPERIMENTFOLDER|g"\
    -e "s|ARGOSFOLDER|$ARGOSFOLDER|g"\
    -e "s|ARENADIMH|$ARENADIMH|g"\
    -e "s|ARENADIM|$ARENADIM|g"\
  $ARGOSTEMPLATE > $ARGOSFILE


echo "+-----------------------------------------------------------+"
echo "Cleaning logs folder..."

# Keep files 0-$NUMROBOTS in order to prevent having to reopen logs
eval $(echo "rm -rf logs/{$(($NUMROBOTS+1))..100}")

for opt in "$@"; do
if [[ $opt == "--start" || $opt == "-s" ]]; then
    echo "+-----------------------------------------------------------+"
    echo "Starting Experiment-GUI"

    argos3 -c $ARGOSFILE
fi

if [[ $opt == "--start-novis" || $opt == "-sz" ]]; then
    echo "+-----------------------------------------------------------+"
    echo "Starting Experiment"

    argos3 -z -c $ARGOSFILE
fi

if [[ $opt == "--logs" || $opt == "-l" ]]; then
    ./tmux-all -l monitor.log
fi
done

